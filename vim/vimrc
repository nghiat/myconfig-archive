set nocompatible              " be iMproved, required
filetype off                  " required
"Download plug.vim if not exist
if !filereadable('~/.vim/autoload/plug.vim')
    let downloadPlug = 'curl -fLo ~/.vim/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"'
    exe 'silent !'.downloadPlug
endif
call plug#begin('$VIMRUNTIME/plugged')

Plug 'VundleVim/Vundle.vim'
Plug 'scrooloose/nerdtree'
Plug 'morhetz/gruvbox'
"syntax checking
"Plug 'scrooloose/syntastic'
"auto closing quotes,...
Plug 'jiangmiao/auto-pairs'
"displays thin vertical lines at each identation level
Plug 'yggdroot/indentline'
"status bar
Plug 'bling/vim-airline'
"GLSL syntax highlighting
Plug 'tikhomirov/vim-glsl'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'majutsushi/tagbar'
Plug 'valloric/youcompleteme'
"html auto-close tag
Plug 'alvan/vim-closetag'
"comment stuff out
Plug 'tpope/vim-commentary'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'tpope/vim-fugitive'
" All of your Plugs must be added before the following line
call plug#end()            " required
filetype plugin indent on    " required
"Enable syntax highlighting
syntax enable
"Enable line number
set number
" Toggle nerdtree
nnoremap <F7> :NERDTreeToggle<CR>
" Switch between buffers
:nnoremap <Tab> :bnext<CR>
:nnoremap <S-Tab> :bprevious<CR>

"Tag bar settings
if (has("win32"))
    let g:tagbar_ctags_bin = "$HOME/myconfig/vim/ctags58/ctags.exe"
endif
nmap <F8> :TagbarToggle<CR>
"X11 clipboard
if has("unix")
    set clipboard=unnamedplus
elseif has("win32")
    set clipboard=unnamed
endif
"tab to spaces
set expandtab
set tabstop=4
"identation tab
set shiftwidth=4
"makes the backspace key treat the spaces like a tab
set softtabstop=4
"makes backspace work like most other apps
set backspace=indent,eol,start
"Set color for column 100th
set cc=100
"Filetype config
au FileType cpp,c,js setl sts=2 sw=2
let g:ycm_confirm_extra_conf = 0
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
set background=dark
colorscheme gruvbox
"syntastic syntax checking
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"
"let g:syntastic_always_populate_loc_list = 0
"let g:syntastic_auto_loc_list = 0
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0
"let g:syntastic_cpp_checkers = ['clang-check']
set softtabstop=4
set encoding=utf-8
"vim-airline always show
set laststatus=2

"show buffers list on the top of window
let g:airline#extensions#tabline#enabled = 1

"Doxygen settings
let g:DoxygenToolkit_briefTag_pre="@Synopsis  "
let g:DoxygenToolkit_paramTag_pre="@Param "
let g:DoxygenToolkit_returnTag="@Returns   "
let g:DoxygenToolkit_blockHeader="-------------------------------"
let g:DoxygenToolkit_blockFooter="---------------------------------"
"matching braces color
highlight MatchParen cterm=bold ctermfg=cyan
"set gui font
if has('gui_running')
    if has("unix")
        set guifont=DejaVu\ Sans\ Mono\ Bold\ 12
    elseif has("win32")
        set guifont=Consolas:h12:b:cANSI
    endif
endif
"map Ctrl-S to save
noremap <silent> <C-s>          :update<CR>
vnoremap <silent> <C-s>         <C-C>:update<CR>
inoremap <silent> <C-s>         <C-O>:update<CR>
" Press Space to turn off highlighting and clear any message already displayed.
:nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
"Cpp Compile and run shortcuts
autocmd Filetype c setlocal makeprg=gcc\ -o\ %<\ %
autocmd Filetype cpp setlocal makeprg=g++\ -o\ %<\ %
autocmd Filetype cpp setlocal makeprg=g++\ -o\ %<\ %
autocmd FileType c,cpp noremap <F6> :w <bar> make<CR>
autocmd FileType c,cpp inoremap <F6> <C-O>:w <bar> make<CR>
autocmd FileType c,cpp nnoremap <F5> :!%<<CR>
autocmd FileType c,cpp inoremap <F5> <C-O>:!%<<CR>

