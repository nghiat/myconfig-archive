set nocompatible              " be iMproved, required
filetype off                  " required
call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'xuyuanp/nerdtree-git-plugin'
Plug 'tpope/vim-surround'
Plug 'raimondi/delimitmate'
Plug 'bling/vim-airline'
Plug 'tikhomirov/vim-glsl'
Plug 'majutsushi/tagbar'
Plug 'alvan/vim-closetag'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'mhinz/vim-startify'
Plug 'SirVer/ultisnips'
Plug 'w0rp/ale'
Plug 'nghiat/fzf'
Plug 'junegunn/fzf.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'nacitar/a.vim'
Plug 'nelstrom/vim-visual-star-search'
Plug 'rhysd/vim-clang-format'
Plug 'valloric/youcompleteme'
Plug 'bronson/vim-trailing-whitespace'
" All of your Plugs must be added before the following line
call plug#end()            " required
""""""""""Vim config""""""""""
    set ignorecase
    set smartcase
    set autochdir
    syntax enable
    color ez
    set cursorline
    set background=light
    filetype plugin indent on    " required
    filetype plugin on
    "makes backspace work like most other apps
    set backspace=indent,eol,start
    "Set color for column 80th
    set cc=80
    set encoding=utf-8
    set expandtab
    "Enable switching between tabs without saving
    set foldmethod=manual
    set hidden
    set incsearch
    set notimeout
    "Enable line number
    set number
    "identation tab
    set shiftwidth=4
    "makes the backspace key treat the spaces like a tab
    set softtabstop=4
    set tabstop=4
    set termguicolors
    "X11 clipboard
    if has("unix")
        set clipboard=unnamedplus
    elseif has("win32")
        set clipboard=unnamed
    endif
    "window default size
    if has('gui_running')
        set columns=100
    endif
    "Color scheme
    if has("unix")
        set t_8f=[38;2;%lu;%lu;%lum
        set t_8b=[48;2;%lu;%lu;%lum
    endif

    "set gui font
    if has('gui_running')
        if has("unix")
            set guifont=DejaVu\ Sans\ Mono\ 12
        elseif has("win32")
            set guifont=Consolas:h12:cANSI
        endif
        set guioptions-=L
        set guioptions-=m
        set guioptions-=r
        set guioptions-=T
    endif

    " Shortcuts
        " Switch between buffers
        nnoremap <silent> <C-c>bp :b#<CR>
        vnoremap <silent> <C-c>bp <C-c>:b#<CR>
        inoremap <silent> <C-c>bp <C-o>:b#<CR>
        " Press Space to turn off highlighting and clear any message already displayed.
        noremap <Space> :set hlsearch! hlsearch?<CR>
        "map Ctrl-S to save
        noremap <silent> <C-s> :update<CR>
        vnoremap <silent> <C-s> <C-c>:update<CR>
        inoremap <silent> <C-s> <C-o>:update<CR>
        "Set Leader key
        let mapleader="\<Space>"
        noremap <leader>h <C-W>h<CR>
        noremap <leader>j <C-W>j<CR>
        noremap <leader>k <C-W>k<CR>
        noremap <leader>l <C-W>l<CR>

""""""""""nerdtree""""""""""
    " Toggle nerdtree
    nnoremap <F7> :NERDTreeToggle<CR>

""""""""""tagbar""""""""""
    if (has("win32"))
        let g:tagbar_ctags_bin = "$HOME/myconfig/windows/ctags/ctags.exe"
    endif
    nmap <F8> :TagbarToggle<CR>

""""""""""utilsnips""""""""""
    let g:UltiSnipsExpandTrigger="<c-k>"
    let g:UltiSnipsJumpBackwardTrigger="<c-j>"
    let g:UltiSnipsJumpForwardTrigger="<c-k>"

""""""""""vim-airline""""""""""
    "vim-airline always show
    set laststatus=2

""""""""""vim-indent-guides""""""""""
    let g:indent_guides_enable_on_vim_startup = 1

""""""""""ctrlp""""""""""
    nnoremap <silent> <C-c>bl :CtrlPBuffer<CR>
    vnoremap <silent> <C-c>bl <C-c>:CtrlPBuffer<CR>
    inoremap <silent> <C-c>bl <C-o>:CtrlPBuffer<CR>
    noremap <silent> <C-c>fr :CtrlPMRUFiles<CR>
    vnoremap <silent> <C-c>fr <C-c>:CtrlPMRUFiles<CR>
    inoremap <silent> <C-c>fr <C-o>:CtrlPMRUFiles<CR>
let g:ctrlp_prompt_mappings = {
    \ 'PrtSelectMove("j")': ['<c-n>'],
    \ 'PrtSelectMove("k")': ['<c-p>'],
    \ 'PrtHistory(-1)': ['<down>'],
    \ 'PrtHistory(1)': ['<up>'],
    \ }

""""""""""fzf""""""""""
    noremap <silent> <C-c>fe :Files<CR>
    vnoremap <silent> <C-c>fe <C-c>:Files<CR>
    inoremap <silent> <C-c>fe <C-o>:Files<CR>
    let g:fzf_colors =
    \ { 'fg':      ['fg', 'Normal'],
      \ 'bg':      ['bg', 'Normal'],
      \ 'hl':      ['fg', 'Comment'],
      \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
      \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
      \ 'hl+':     ['fg', 'Statement'],
      \ 'info':    ['fg', 'PreProc'],
      \ 'border':  ['fg', 'Ignore'],
      \ 'prompt':  ['fg', 'Conditional'],
      \ 'pointer': ['fg', 'Exception'],
      \ 'marker':  ['fg', 'Keyword'],
      \ 'spinner': ['fg', 'Label'],
      \ 'header':  ['fg', 'Comment'] }

""""""""""A""""""""""
    noremap <silent> <C-c>fs :A<CR>
    vnoremap <silent> <C-c>fs <C-c>:A<CR>
    inoremap <silent> <C-c>fs <C-o>:A<CR>

""""""""""vim-clang-format""""""""""
    autocmd FileType c,cpp,objc nnoremap <buffer><Leader>f :<C-u>ClangFormat<CR>
    autocmd FileType c,cpp,objc vnoremap <buffer><Leader>f :ClangFormat<CR>
